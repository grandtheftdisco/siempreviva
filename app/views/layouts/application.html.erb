<!DOCTYPE html>
<html>
  <%= render partial: "layouts/public/head" %>

  <body>
    <header>
      <div id="searchbox"></div>
      <div id="hits" class="border border-blue-300"></div>
      <nav class="flex justify-between p-5">
        <ul class="inline-flex gap-5">
          <li><%= link_to '[[logo]]', root_path %></li>
          <li><%= link_to 'Products', products_path %></li>
          <li><%= link_to 'Our Farms', our_farms_path %></li> 
          <li><%= link_to 'Learn', learn_path %></li>
          <li><%= link_to 'Contact', contact_path %></li>
        </ul>
        <ul class="inline-flex">
          <li><%= link_to 'Bag', cart_path if @cart %></li>
        </ul>
      </nav>
    </header>
    <main>
      <%= render partial: "layouts/public/flash_alert" %>
      <%= yield %>
    </main>
  </body>
</html>

<script>
  // Initialize the search client

  const { liteClient: algoliasearch } = window['algoliasearch/lite'];
  const searchClient = algoliasearch('<%= Rails.application.credentials.algolia[:application_id] %>',
                                     '<%= Rails.application.credentials.algolia[:write_api_key] %>');

  // Render the InstantSearch.js wrapper
  const search = instantsearch({
    indexName: 'products_index',
    searchClient,
    searchFunction(helper) {
      // only search if the query is not empty
      if (helper.state.query.trim() === '') {
        // hide hits container if query is empty
        document.querySelector('#hits').style.display = 'none';
        return;
      }
      // show hits container and search
      document.querySelector('#hits').style.display = '';
      helper.search();
    }
  });

  search.addWidgets([
    instantsearch.widgets.searchBox({
      container: '#searchbox',
      cssClasses: {
        input: 'border border-purple-500 rounded-2xl px-2 py-1',
        submit: 'bg-transparent p-2 text-purple-300 hover:text-purple-700'
      }
    }),

    instantsearch.widgets.hits({
      container: '#hits',
      templates: {
        item(hit, { html, components }) {

          const url = `/products/${hit.objectId}`;

          return html`
            <a href="${url}" class="block hover:bg-purple-50 rounded-2xl p-2">
              <h2>
                ${components.Highlight({ attribute: 'name', hit })}
              </h2>
              <p> ${hit}</p>
            </a>
          `;
        },
      },
    })
  ]);

  // hide hits on initial load
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelector('#hits').style.display = 'none';
  });

  search.start();

</script>